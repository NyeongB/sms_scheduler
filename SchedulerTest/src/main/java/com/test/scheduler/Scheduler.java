package com.test.scheduler;

import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.test.sms.Send;

@Component
public class Scheduler
{
	/**
	 * 1. 매일 아침 8시 50분에 출근 후 QR 체크하라고 알림을 주는 프로그램
	 */
	
	
	@Scheduled(cron = "0 10 19 * * *")
	public void autoUpdate()
	{
		String tel = "01099659257";
		Send.send(tel);
		//System.out.println("오후 05:37:00에 호출이 됩니다 ");
	}
	/*
	 * 초 | 분 | 시 | 일 | 월 | 요일 | 연도
	 * 
	 * 0~59 | 0~59 | 0~23 | 1~31 | 1~12 | 0~6 | 생략가능
	 * 
	 * ​
	 * 
	 * ​
	 * 
	 * 요일 : 0 (일요일) ~ 6( 토요일)
	 * 
	 * ? : 설정 값 없을 때 - 일과 요일 에서만 사용가능
	 * 
	 * : 모든조건
	 * 
	 * 시작시간/단위 : 시작시간부터 해당 단위 때
	 * 
	 * 시작범위-끝범위 : 시작범위 부터 끝범위까지
	 * 
	 * L : 마지막 - 일, 요일 에서만 사용가능
	 * 
	 * W : 가장 가까운 평일 찾는다 - 일 에서만 사용가능
	 * 
	 * ex) 10W
	 * 
	 * -10일이 평일 일 때 : 10일에 실행
	 * 
	 * -10일이 토요일 일 때 : 가장 가까운 평일인 금요일(9일)에 참
	 * 
	 * -10일이 일요일 일 때 : 가장 가까운 평일인 월요일(11일)에 참
	 * 
	 * # : 몇주 째인지 찾는다 - 요일 에서만 사용가능
	 * 
	 * ex) 3#2 : 수요일#2째주 에 참
	 * 
	 * ​
	 * 
	 * 예제
	 * 
	 * ​
	 * 
	 * 1) 매월 10일 오전 11시
	 * 
	 * 0 1 1 10 * *
	 * 
	 * ​
	 * 
	 * 2) 매일 오후 2시 5분 0초
	 * 
	 * 0 5 14 * * *
	 * 
	 * ​
	 * 
	 * 3) 10분마다 도는 스케줄러 : 10분 0초, 20분 0초...
	 * 
	 * 0 0/10 * * *
	 * 
	 * ​
	 * 
	 * 4) 조건에서만 실행되는 스케줄러 : 10분 0초, 11분 0초 ~ 15분 0초까지 실행
	 * 
	 * 0 10-15 * * *
	 * 
	 * ​
	 * 
	 * 5) 매월 마지막 금요일 오전 10:15
	 * 
	 * 0 15 10 ? * 6L
	 * 
	 * ​
	 * 
	 * 6) 2014년부터 2017년까지 매월 마지막 금요일 오전 10:15에
	 * 
	 * 0 15 10 ? * 6L 2014-2017
	 */

}